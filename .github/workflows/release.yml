name: release

env:
  BEVY_CLI_VERSION: a3c83153973fec40a4589607caa691a2eff18de9
  BINARY_NAME: physball

on:
  push:
    tags:
      - '*'

jobs:
  release-desktop:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Install Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install libwayland-dev libasound2-dev libudev-dev
      - name: Checkout
        uses: actions/checkout@v5
      - name: Install Bevy CLI
        run: cargo install --git https://github.com/TheBevyFlock/bevy_cli --rev ${{ env.BEVY_CLI_VERSION }} --locked bevy_cli
      - name: Build
        run: bevy build --release
      - name: Create Dist Directory
        run: mkdir dist
      - name: Copy Unix Executable
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: cp target/release/${{ env.BINARY_NAME }} dist/
      - name: Copy Windows Executable
        if: matrix.os == 'windows-latest'
        run: cp target/release/${{ env.BINARY_NAME }}.exe dist/
      - name: Copy Assets Directory
        continue-on-error: true
        run: cp -r assets dist/
      - name: Compress Dist Directory
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: tar -cvzf ../${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ steps.date.outputs.date }}-${{ runner.os }}.tar.gz *
        working-directory: dist
      - name: Zip Dist Directory
        if: matrix.os == 'windows-latest'
        run: Compress-Archive -Path dist/* -DestinationPath ${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ steps.date.outputs.date }}-${{ runner.os }}.zip
      - name: Create Unix Release
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ steps.date.outputs.date }}-${{ runner.os }}.tar.gz
          token: ${{ secrets.PUBLISH_TOKEN }}
      - name: Create Windows Release
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ steps.date.outputs.date }}-${{ runner.os }}.zip
          token: ${{ secrets.PUBLISH_TOKEN }}
  release-web:
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      - name: Install WASM toolchain
        run: rustup target add wasm32-unknown-unknown
      - name: Checkout
        uses: actions/checkout@v5
      - name: Install Bevy CLI
        run: cargo install --git https://github.com/TheBevyFlock/bevy_cli --rev ${{ env.BEVY_CLI_VERSION }} --locked bevy_cli
      - name: Build
        run: bevy build --release --yes web --bundle
      - name: Create Dist Directory
        run: mkdir dist
      - name: Copy Bundle
        run: cp  -r target/bevy_web/web-release/${{ env.BINARY_NAME }}/* dist/
      - name: Zip Dist Directory
        run: zip -vr ../${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ steps.date.outputs.date }}-web.zip *
        working-directory: dist
      - name: Create Web Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ steps.date.outputs.date }}-web.zip
          token: ${{ secrets.PUBLISH_TOKEN }}
